from cProfile import label
from re import S
import numpy as np 
import time
from scipy.stats import unitary_group
import scipy.linalg as la
from scipy.stats import unitary_group
import math
import matplotlib.pyplot as plt
import random
# error_rate_l1_exp =[0.933487, 0.906254, 0.883582, 0.855111, 0.843891, 0.829477, 0.817717, 0.801602, 0.789249, 0.777651 ]
# error_rate_l2_exp =[0.930935, 0.903781, 0.880914, 0.85416, 0.84205, 0.830283, 0.816568, 0.800556, 0.789675, 0.781083 ]

# error_rate_l1_laplacian =[0.997088, 0.992627, 0.995727, 0.992412, 0.989306, 0.987539, 0.986078, 0.988335, 0.984229, 0.981896 ]
# error_rate_l2_laplacian =[0.995128, 0.99254, 0.994273, 0.990083, 0.986498, 0.984251, 0.983794, 0.98716, 0.981726, 0.978725 ]


# error_rate_l1_gaussian =[2.41881e-20, 4.58671e-22, 3.58689e-23, 4.83942e-24, 1.08753e-24, 1.91959e-25, 6.08825e-26, 3.48111e-26, 1.52883e-26, 3.95293e-27 ]


# error_rate_l1_tstudent=[1.00067, 1.00192, 1.00283, 1.00073, 1.0033, 1.00285, 1.00631, 1.00716, 1.00733, 1.00918]
# error_rate_l2_tstudent=[1.00138, 1.00328, 1.0052, 1.00403, 1.00807, 1.00622, 1.011, 1.01382, 1.01303, 1.01887]


# error_rate_l1_polynomial=[0.9357, 0.913733, 0.885775, 0.859214, 0.844326, 0.831384, 0.813566, 0.80532, 0.79215, 0.783495]
# error_rate_l2_polynomial=[0.933466, 0.909893, 0.884684, 0.854587, 0.845608, 0.831458, 0.813871, 0.806099, 0.791132, 0.780666 ]

# error_rate_l1_tanh=[0.979195, 0.981423, 0.978555, 0.978533, 0.979629, 0.977811, 0.979006, 0.977862, 0.982418, 0.978182]
# error_rate_l2_tanh=[0.979094, 0.981739, 0.979459, 0.981437, 0.980831, 0.978885, 0.981433, 0.977502, 0.980944, 0.978253]

# error_rate_l1_power =[1.00242, 1.00103, 1.00104, 1.00157, 1.00218, 1.00301, 1.00938, 1.00623, 1.00556, 1.00877 ]
# error_rate_l2_power =[1.00292, 1.00198, 1.00227, 1.00386, 1.00432, 1.00627, 1.01267, 1.01156, 1.01089, 1.01045 ]

# error_rate_l1_log =[1.01122, 1.00419, 1.03927, 1.00441, 1.0431, 1.0064, 1.02031, 1.03027, 1.07771, 1.08603 ]
# error_rate_l2_log =[1.0227, 1.01231, 1.05988, 1.0152, 1.08228, 1.02277, 1.04289, 1.06474, 1.12357, 1.12481 ]

# error_rate_l1_inverse_multiquadratic =[1.00616, 1.00078, 1.02164, 1.00531, 1.01453, 1.0097, 1.01027, 1.001, 1.03555, 1.07882 ]
# error_rate_l2_inverse_multiquadratic =[1.01028, 1.00435, 1.03442, 1.01216, 1.02247, 1.01795, 1.02077, 1.01258, 1.06029, 1.10489 ]

# error_rate_l1_multiquadratic =[1.00867, 1.00598, 1.00077, 1.01304, 1.00765, 1.01175, 1.02701, 1.03554, 1.01592, 1.0123 ]
# error_rate_l2_multiquadratic =[1.01176, 1.01008, 1.0065, 1.01893, 1.01798, 1.02024, 1.04644, 1.05268, 1.02859, 1.0296 ]

# error_rate_l1_rational =[1.0005, 1.00522, 1.00094, 1.01932, 1.00511, 1.00398, 1.00337, 1.01355, 1.02659, 1.01639 ]
# error_rate_l2_rational =[1.0012, 1.00926, 1.00557, 1.02436, 1.01128, 1.01225, 1.01219, 1.02363, 1.04042, 1.02852 ]



#-------------------------------------------------------------------------------
# new clusted data benchmark
# error_rate_l1_log=[1.00455805817774, 1.1286544028054455, 0.9941846666072844, 1.0015291068884176, 0.9986032418468724, 0.9932248808548267, 1.006135339857812, 1.0176408480243424, 0.9986258978283271, 0.9987894489122372, 0.9976595110009547, 1.001548480018625, 1.0016639615429659, 1.0046131481696206, 1.0000210189491292, 0.9999999997474618, 0.9999999998354007, 0.9999999998859354, 0.9999999999396078, 1.0000000004491616]
# error_rate_l2_log=[1.0118913552994344, 1.0762643881434628, 0.9987305311209006, 1.0020486165847013, 0.9999674564505874, 0.9998451386817919, 1.0075625359838039, 1.0148965609170937, 1.0026768048173251, 1.0003125287904022, 1.000509996430905, 1.0029128045484612, 1.0013963193054103, 1.0054281132071492, 1.000016527182869, 1.00000000006611, 1.0000000000274198, 1.0000000000461302, 1.0000000000742404, 1.0000000004646306]

# error_rate_l1_power=[1.003964850054924, 1.000669211543354, 1.0005124329159352, 0.9988245950699162, 1.004806182476409, 1.0014184981572967, 0.9991096095719438, 1.0002096221432843, 0.9994825999326375, 0.9997071384389299, 0.9997099374711856, 1.0008099048198498, 1.000459334506986, 1.0001035973050605, 1.0000537682787194, 0.9999999999999998, 1.0000000000000002, 1.0000000000000004, 1.0000000000000002, 1.0]
# error_rate_l2_power=[1.001797390068388, 1.0005753453498685, 1.000532951750651, 0.9996223528624613, 1.0021982977786705, 1.0007051854370042, 0.9999796727603197, 1.0001993495895782, 0.9999908671830641, 1.0000004436158603, 1.0000167612151039, 1.0005833045037682, 1.0002685919120684, 1.000077113905018, 1.000016997799787, 1.0, 1.0000000000000002, 1.0000000000000004, 1.0000000000000002, 1.0]

# error_rate_l1_multiquadratic=[1.1317036549861244, 1.0365062714472881, 1.0430599789394153, 1.0035649080623397, 0.9998305361948965, 1.1016522193239393, 1.0390911592309546, 1.0032506018386838, 0.9913271208170837, 1.0553317410388439, 0.995969297307133, 0.9914838458145383, 1.0206794082523116, 1.0240551217601392, 0.9987800062235866, 0.9966354116736544, 0.9925188293392031, 1.013126772664503, 0.99690683697902, 1.0135902581816911]
# error_rate_l2_multiquadratic=[1.0798956448097061, 1.0311975956471522, 1.029695725460084, 1.0032142742061174, 1.0015341634687793, 1.057382391108119, 1.026277477434854, 1.0066200412992652, 0.9984125542762913, 1.03099022931086, 0.998836006345724, 0.9996124753023039, 1.011215977742848, 1.0174787165526296, 1.000056055945785, 1.0002309154481512, 0.99885428299506, 1.0084765859572387, 1.0005134426556388, 1.008444050439871]

# error_rate_l1_rational=[0.004529065452247688, 0.008203491826161686, 0.004043301259575025, 0.008351226012951348, 0.005172005319654165, 0.005580375469165811, 0.00933224860639888, 0.004099828797275546, 0.00827548503159921, 0.006877078324377383, 0.002955467410220339, 0.005438459632543663, 0.005887428755611707, 0.00442517856345382, 0.005952133973091243, 0.009953763442096053, 0.0041294977667473915, 0.06001601347957351, 0.2917985754908569, 0.48634806958266574]
# error_rate_l2_rational=[0.05677340561159463, 0.07605678292322281, 0.05499998292531816, 0.07850604611378538, 0.06425080108513874, 0.06780176537964103, 0.08368774799467336, 0.05600628202178558, 0.08115398463693405, 0.07281190614775139, 0.04822341411376837, 0.06286215144999599, 0.06873764458838878, 0.05304013788923997, 0.06940379833165386, 0.08539163253609507, 0.05656642435000152, 0.41106157443452773, 0.6451107335253236, 0.7502647214661778]

# error_rate_l1_polynomial=[0.04093321713438548, 0.04114248541872938, 0.04128568361623479, 0.04410707021258469, 0.042692619976141516, 0.043273176398317785, 0.04576182388783352, 0.04687959545051125, 0.043015848495320586, 0.047948974811614475, 0.04816708990766411, 0.04827206169945308, 0.04780381649411551, 0.047842101239959856, 0.050522687541117675, 0.05097240010254154, 0.05613899298057619, 0.06385674255741339, 0.13308660275855927, 0.21652374174308617]
# error_rate_l2_polynomial=[0.19656808882332472, 0.19720908387801064, 0.19855797813972464, 0.20596604057709186, 0.20230440138423803, 0.20324121734651382, 0.20990551371217475, 0.2107593382086578, 0.20390533354144907, 0.21526855708441253, 0.2140619825492362, 0.21481872132644503, 0.21279017676654194, 0.21497007699577647, 0.21839520888272962, 0.2214666524362036, 0.232976070033485, 0.27129920808472174, 0.43444719094240175, 0.5457690116189484]

# error_rate_l1_tanh=[0.9370960295131694, 0.9162455994472701, 0.69278731375282, 0.675485959249552, 0.755777009787928, 0.6282473109844741, 0.7399048545351135, 0.8026838352678143, 0.872333259639056, 0.6407006890463366, 0.7374691792200931, 0.6797689621692816, 0.8886254800041812, 0.6698713993252438, 0.674893823549753, 0.8147672062812511, 0.5789092359117649, 0.6799594835037777, 0.6920031142853817, 0.806020424655322]
# error_rate_l2_tanh=[0.923180789447704, 0.915733568722375, 0.8241508928204295, 0.8178328615477113, 0.8485570339447207, 0.7895170117787097, 0.842856422331925, 0.8765211202880023, 0.8906024448213505, 0.7966229319612148, 0.8485300297213287, 0.8144433722207246, 0.89109974264092, 0.8117839922697823, 0.8150595957306883, 0.8699412467723435, 0.7585607427316358, 0.8072999410544768, 0.8210791276363085, 0.8710347102655904]

# error_rate_l1_tstudent=[8.734853147471851e-07, 2.6559663845901517e-06, 2.2520929022588303e-06, 1.1191324809194294e-06, 1.7250067259768047e-06, 2.1261307904430935e-06, 1.2341172992514914e-06, 1.3773023633631854e-06, 2.219168143965153e-06, 1.227804818715962e-06, 1.5979410371043723e-06, 1.268641058001316e-06, 2.497888003280489e-06, 1.4950299762667501e-06, 1.3169245711340194e-06, 2.340670075160439e-06, 1.0126557320880626e-06, 0.05486697301813381, 0.28548218405074455, 0.48483103373590825]
# error_rate_l2_tstudent=[0.0008638943645166506, 0.0014601273301187196, 0.0012931279842004887, 0.000994645199825373, 0.0011383978488141273, 0.0012902120055423246, 0.0010113939975772356, 0.001084109504804422, 0.0013196203792543407, 0.001023063914769149, 0.0011338939022518114, 0.000990886555621942, 0.0013753440931641252, 0.0010780608432674932, 0.0010565737330009586, 0.0013821661431532481, 0.0009187288225588842, 0.41832394754639896, 0.6428401919016403, 0.7502087921605087]

# error_rate_l1_gaussian=[3.3605944955673754e-17, 3.4698082445698983e-17, 3.4787757788037365e-17, 3.5561434764083115e-17, 3.431138291929268e-17, 3.591402287129576e-17, 3.612375031356846e-17, 3.648362820664224e-17, 3.5157111205689236e-17, 3.49275734187958e-17, 3.5609451191581437e-17, 3.4156625151936836e-17, 3.6118164254527264e-17, 3.441519462158523e-17, 3.4241923023062465e-17, 3.537352613486313e-17, 3.524918667649377e-17, 0.05622200481518589, 0.2921784690904421, 0.4964033074791831]
# error_rate_l2_gaussian=[8.475410674589212e-09, 8.515045537400432e-09, 8.575258049557516e-09, 8.575201280314531e-09, 8.508327590581067e-09, 8.646449953479402e-09, 8.597625817302291e-09, 8.676036168288899e-09, 8.550404622863408e-09, 8.538200717741207e-09, 8.632225985282915e-09, 8.453182556803957e-09, 8.628707441690412e-09, 8.509006866252192e-09, 8.454289386003062e-09, 8.50065036439313e-09, 8.574356490092283e-09, 0.4205381231685627, 0.6497542444390337, 0.7558729676088513]

# error_rate_l1_laplacian=[3.5275611452050874e-17, 3.6471632939123034e-17, 3.554199928827476e-17, 3.529202581785046e-17, 3.416081751942854e-17, 3.352560025569626e-17, 3.5018055604876644e-17, 3.540512472292492e-17, 3.466635149068984e-17, 3.5065543362078756e-17, 3.5449666967310605e-17, 3.5078360431829277e-17, 3.480975419601798e-17, 3.560650973660354e-17, 3.66799441297944e-17, 3.617621290254546e-17, 3.4670699765534597e-17, 0.05426117786356168, 0.2810439429404126, 0.49220150580361155]
# error_rate_l2_laplacian=[8.539315174066563e-09, 8.59579669424002e-09, 8.564884251864364e-09, 8.555176239026748e-09, 8.418418409720971e-09, 8.369114122437604e-09, 8.511165811610515e-09, 8.55099452767144e-09, 8.47742845968818e-09, 8.48195206875653e-09, 8.565226445645243e-09, 8.499261777842035e-09, 8.536531721105942e-09, 8.561058714527983e-09, 8.650950735947226e-09, 8.635904824467402e-09, 8.508302985780977e-09, 0.41698718752584985, 0.6383933951777774, 0.7539784906700975]

# error_rate_l1_inverse_multiquadratic=[0.398305921976487, 0.46548490521718894, 0.33945498545879305, 0.4090922176469201, 0.18217168642709608, 0.35372796285365404, 0.5276310021049665, 0.22041111785087292, 0.4422859435285478, 0.21038846996323696, 0.4286653266419188, 0.3652370767452986, 0.2549522358467007, 0.3165880702014091, 0.38088358322641286, 0.27795118734642876, 0.35800872340560985, 0.34029969145809263, 0.5054604881147461, 0.6018883328560178]
# error_rate_l2_inverse_multiquadratic=[0.5353370516995225, 0.6069103261706668, 0.4827007527539374, 0.5477068878186115, 0.35284367043848963, 0.5306791234400784, 0.652255827734958, 0.4178746228442124, 0.5687225036144075, 0.386134220766796, 0.5842867648944298, 0.5410574104737095, 0.42563687060718036, 0.4889340531667976, 0.5343307354115531, 0.4425474392225384, 0.5353895382529325, 0.5541962233017121, 0.724547976308297, 0.786975057652537]


#-------------------------------------------------------------------------------


# error_rate_l1_rational = error_rate_l1_rational[-15: -1]
# error_rate_l2_rational= error_rate_l2_rational[-15: -1]
# error_rate_l1_multiquadratic = error_rate_l1_multiquadratic[-15: -1]
# error_rate_l2_multiquadratic= error_rate_l2_multiquadratic[-15: -1]
# error_rate_l1_log = error_rate_l1_log[-15: -1]
# error_rate_l2_log = error_rate_l2_log[-15: -1]


# error_rate_l1_tanh = error_rate_l1_tanh[-15: -1]
# error_rate_l2_tanh = error_rate_l2_tanh[-15: -1]
# error_rate_l1_power = error_rate_l1_power[-15: -1]
# error_rate_l2_power = error_rate_l2_power[-15: -1]
# error_rate_l1_inverse_multiquadratic = error_rate_l1_inverse_multiquadratic[-15: -1]
# error_rate_l2_inverse_multiquadratic = error_rate_l2_inverse_multiquadratic[-15: -1]

# error_rate_l1_polynomial= error_rate_l1_polynomial[-15: -1]
# error_rate_l2_polynomial= error_rate_l2_polynomial[-15: -1]

# error_rate_l1_tstudent= error_rate_l1_tstudent[-15: -1]
# error_rate_l2_tstudent= error_rate_l2_tstudent[-15: -1]

# error_rate_l1_laplacian= error_rate_l1_laplacian[-15: -1]
# error_rate_l2_laplacian= error_rate_l2_laplacian[-15: -1]
# error_rate_l1_gaussian = error_rate_l1_gaussian[-15: -1]
# error_rate_l2_gaussian = error_rate_l2_gaussian[-15: -1]

error_rate_l1_laplacian=[0.044388260612112866, 0.12259526869165613, 0.1736651724107394, 0.2276830710129146, 0.2528561671640177, 0.30308349625719677, 0.31157263499320587, 0.33351953252692673, 0.3820464227920967, 0.3706737480230296]
error_rate_l2_laplacian=[0.30405102313394283, 0.39382287315193265, 0.452320469504217, 0.5025077249644457, 0.5308367033875989, 0.575119014427797, 0.5804582520682604, 0.5995830113313202, 0.6321655879493184, 0.6219477729866345]

error_rate_l1_gaussian=[0.04662572395216666, 0.12662692073648366, 0.20058729011201032, 0.21734966674345602, 0.26311056853952586, 0.285467651937227, 0.3277565780430241, 0.3448058200938595, 0.3646866767505198, 0.4077397419486143]
error_rate_l2_gaussian=[0.31021388763706836, 0.4062218758906604, 0.4677801813676826, 0.5023893802225748, 0.5402664526846449, 0.5609415862570051, 0.599770243681242, 0.6092014616710879, 0.6255948445291595, 0.6592952142401546]

error_rate_l1_rational=[0.04808747395127088, 0.12735380703109156, 0.20139800825702428, 0.2394169508513234, 0.26414415328412005, 0.2828292254189961, 0.3119378359798726, 0.3375184074599108, 0.37016645225134226, 0.3805534309450562]
error_rate_l2_rational=[0.3109948222792369, 0.40022627262729527, 0.4713288000594938, 0.5148588997540459, 0.5415880120376523, 0.558457602019067, 0.586362304616938, 0.6061259323276534, 0.6339553457790524, 0.6401407313678135]

error_rate_l1_polynomial=[0.014676756787004804, 0.018458247311021962, 0.02461272925023179, 0.030869782080144043, 0.03812099133203102, 0.05643506038112021, 0.05083968808286652, 0.07942873987095307, 0.07115035205806491, 0.09126891069082718]
error_rate_l2_polynomial=[0.16627343579916712, 0.18214564535402572, 0.22115159398502068, 0.24904445020233568, 0.28802126764863145, 0.3521621294007777, 0.31971726825885166, 0.40745018931880433, 0.37631930465160085, 0.41926749433036]

error_rate_l1_tanh=[0.6849455423170799, 0.7970008044783679, 0.7459210648728071, 0.7781159714328296, 0.669192167885817, 0.8112819530704292, 0.8918283199558689, 0.6685536201858444, 0.7725773526715385, 0.6625323869110328]
error_rate_l2_tanh=[0.8113260263417992, 0.8687343153353939, 0.8432764788584413, 0.8640783706744255, 0.8126449707738388, 0.8661059023445608, 0.9018519544122772, 0.8101505166707966, 0.8539008254466275, 0.8110117289807353]

error_rate_l1_tstudent=[0.04716596562908631, 0.1340946298320397, 0.19802519625745388, 0.2220608240832164, 0.26308389605684634, 0.3150760221910147, 0.3149859085095261, 0.3411757219379207, 0.3636151101935477, 0.4101676734281415]
error_rate_l2_tstudent=[0.30822811502062286, 0.4102007195670021, 0.4698319861293398, 0.5035866588341107, 0.5379945015144721, 0.5800944583664653, 0.5878207057745521, 0.6087828503171864, 0.6203532837621593, 0.6532228077740678]

error_rate_l1_log=[1.0000000054413485, 1.000000003381859, 1.0000000116358225, 1.0000000021292927, 1.0000000004661578, 1.000000011736909, 1.0000000024070155, 1.0000000139839342, 1.0000000064703485, 1.0000000011501002]
error_rate_l2_log=[1.0000000050266529, 1.0000000033567011, 1.0000000073333735, 1.00000000341907, 1.0000000023385485, 1.0000000063501155, 1.0000000031553955, 1.000000007470458, 1.0000000042504484, 1.0000000023162454]

error_rate_l1_power=[1.0000000000000062, 1.0000000000000007, 1.000000000000006, 0.9999999999999998, 1.0000000000000029, 1.0000000000000029, 1.000000000000003, 1.0000000000000058, 1.0000000000000022, 1.0000000000000036]
error_rate_l2_power=[1.0000000000000033, 1.000000000000001, 1.000000000000004, 1.0000000000000004, 1.000000000000002, 1.000000000000002, 1.0000000000000022, 1.0000000000000036, 1.0000000000000016, 1.0000000000000024]

error_rate_l1_inverse_multiquadratic=[0.11274915247380286, 0.16150459437445042, 0.213895664504797, 0.2292183001540423, 0.2940506698790454, 0.2996791403202859, 0.3375017749896297, 0.3561859536620098, 0.36541987671879633, 0.4271271420163577]
error_rate_l2_inverse_multiquadratic=[0.3452766789240439, 0.42787838699729175, 0.48542610252621954, 0.5039930993588569, 0.5619912462686221, 0.5664165749765412, 0.5955240057908836, 0.6208711249891632, 0.6283774282570297, 0.6793536739314895]

error_rate_l1_multiquadratic=[1.016626115013556, 1.0445474131422594, 1.0157534532295949, 0.9689390538053623, 0.9841442964345344, 1.0063508410561508, 1.013033714314754, 1.0154052234281778, 1.0413089705956904, 0.9979176811920147]
error_rate_l2_multiquadratic=[1.0213404327422848, 1.0268303744988723, 1.011586642797927, 0.99734292612431, 1.0075326417137576, 0.999321566293896, 1.0128413131244267, 1.015417690411056, 1.0316514741012375, 1.006892121193842]

time_ours=[11.994194269180298, 11.25403380393982, 10.747245073318481, 10.590015888214111, 10.696256875991821, 10.61880111694336, 10.582603216171265, 10.209522485733032, 10.135044574737549, 9.98862099647522]
time_baseline=[96.01611280441284, 93.73239183425903, 93.5931487083435, 93.91787147521973, 96.62967872619629, 97.72892498970032, 96.31638264656067, 96.32929825782776, 96.35595059394836, 96.53207421302795]

y_tick_size = 20
ticks_size = 20
label_size = 22
legend_size = 16

x = np.linspace(0, len(error_rate_l1_tanh), len(error_rate_l1_tanh))
x_ticks = np.linspace(3.05, 2.6, len(error_rate_l1_tanh))
x_ticks = [3.05, 3.0, 2.95, 2.9, 2.85, 2.8, 2.75, 2.7, 2.65, 2.6]

# plt.figure()
# plt.plot(x, error_rate_l1_exp, label='Error rate L1 norm')
# plt.plot(x, error_rate_l2_exp, label='Error rate L2 norm')
# plt.xlabel("Truncation percentage(%)", fontsize= label_size)
# plt.ylabel("Error rate", fontsize= label_size)
# plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
# plt.yticks(fontsize=y_tick_size)
# plt.legend(fontsize= legend_size)
# plt.savefig("error_rate_fvalue_truncation_exp.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')



plt.figure()
plt.plot(x, error_rate_l1_laplacian, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_laplacian, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_laplacian.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

plt.figure()
plt.plot(x, error_rate_l1_gaussian, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_gaussian, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_gaussian.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

plt.figure()
plt.plot(x, error_rate_l1_tstudent, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_tstudent, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_tstudent.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

plt.figure()
plt.plot(x, error_rate_l1_polynomial, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_polynomial, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_polynomial.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

plt.figure()
plt.plot(x, error_rate_l1_tanh, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_tanh, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_tanh.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')


plt.figure()
plt.plot(x, error_rate_l1_power, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_power, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_power.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

plt.figure()
plt.plot(x, error_rate_l1_log, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_log, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_log.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')


plt.figure()
plt.plot(x, error_rate_l1_inverse_multiquadratic, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_inverse_multiquadratic, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_inverse_multiquadratic.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')





plt.figure()
plt.plot(x, error_rate_l1_multiquadratic, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_multiquadratic, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_multiquadratic.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')




plt.figure()
plt.plot(x, error_rate_l1_rational, label='Error rate L1 norm')
plt.plot(x, error_rate_l2_rational, label='Error rate L2 norm')
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Error rate", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.legend(fontsize= legend_size)
plt.savefig("error_rate_fvalue_truncation_rational.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')




speedup = []
for i in range(len(time_ours)):
    speedup.append(time_baseline[i] / time_ours[i])

# print(speedup)
plt.figure()
plt.plot(x, speedup)
plt.xlabel("Truncation percentage(%)", fontsize= label_size)
plt.ylabel("Speedup", fontsize= label_size)
plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
plt.yticks(fontsize=y_tick_size)
plt.savefig("speedup_fvalue_truncation_rational.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')





# error_rate_l1_power3 =[7.00693e-06, 1.02356e-06, 2.84454e-07, 1.04004e-07, 4.82328e-08, 2.50735e-08, 1.4186e-08, 8.19589e-09, 5.0766e-09, 3.26435e-09, ]
# error_rate_l2_power3 =[2.90179e-06, 4.2294e-07, 1.16763e-07, 4.14833e-08, 1.9496e-08, 1.0042e-08, 5.74644e-09, 3.32479e-09, 2.08323e-09, 1.34284e-09, ]

# error_rate_l1_power4 =[6.31298e-22, 4.87153e-26, 2.45693e-29, 2.86922e-32, 3.07688e-33, 1.68627e-36, 1.45358e-37, 0, 0, 0, ]
# error_rate_l2_power4 =[5.80793e-22, 6.75648e-26, 3.31923e-29, 4.67708e-32, 5.48444e-33, 2.69747e-36, 2.68617e-37, 0, 0, 0, ]


# plt.figure()
# plt.plot(x, error_rate_l1_power3, label='Error rate L1 norm')
# plt.plot(x, error_rate_l2_power3, label='Error rate L2 norm')
# plt.xlabel("Truncation percentage(%)", fontsize= label_size)
# plt.ylabel("Error rate", fontsize= label_size)
# plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
# plt.yticks(fontsize=y_tick_size)
# plt.legend(fontsize= legend_size)
# plt.savefig("error_rate_fvalue_truncation_gaussian_power3.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')

# plt.figure()
# plt.plot(x, error_rate_l1_power4, label='Error rate L1 norm')
# plt.plot(x, error_rate_l2_power4, label='Error rate L2 norm')
# plt.xlabel("Truncation percentage(%)", fontsize= label_size)
# plt.ylabel("Error rate", fontsize= label_size)
# plt.xticks(x, x_ticks, fontsize= ticks_size, rotation= 25)
# plt.yticks(fontsize=y_tick_size)
# plt.legend(fontsize= legend_size)
# plt.savefig("error_rate_fvalue_truncation_gaussian_power4.pdf", facecolor='w', edgecolor='w', orientation='portrait', bbox_inches='tight')